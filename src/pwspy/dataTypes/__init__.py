# -*- coding: utf-8 -*-
"""
Data Types Module
==========================
This module contains all custom datatypes that are commonly used in the analysis of PWS related data.

Metadata classes
----------------------------
These classes provide handling of information about an acquisition without requiring that the full data be loaded into RAM. These can be used to get information
about the equipment used, the date the acquisition was taken, the location of the files, the presence of ROIs or analyses, etc.

:class:`ICMetaData`:
    Metadata for a PWS acquisition

:class:`DynMetaData`:
    Metadata for a dynamics acquisition

:class:`ERMetadata`:
    Metadata for an extra reflectance calibration file.

:class:`MetaDataBase`:
    This base class is inherited by all other metadata classes

:class:`FluorMetaData`:
    Metadata for a fluorescence image.

:class:`AnalysisManagerMetaDataBase`:
    This base class extends `MetaDataBase` to add handling for analysis results.

Data Classes
------------------
These classes are used to actuallly load and manipulate acquisition data. The all have a corresponding metadata class.

:class:`ImCube`:
    This represents a single PWS acquisition

:class:`DynCube`:
    This represents a single Dynamics acquisition

:class:`KCube`:
    This class is used to represent an ImCube after being transformed from wavelength space to k-space (wavenumber). Most analysis takes place in k-space.

:class:`ExtraReflectanceCube`:
    This class represents the extra system reflectance calibration that is generated by `pwspy.apps.ExtraReflectanceCreator`

:class:`ExtraReflectionCube`:
    This class is generally created from an `ExtraReflectanceCube` and is used to correct for extra system reflection in an `ImcCube` or `DynCube`.

:class:`ICBase`:
    This serves as a base class for most of the other data classes.

:class:`ICRawBase`:
    This class extends `ICBase` and serves as a base class for dataclasses that are associated with raw acquisition data.

Other Classes
--------------------
:class:`Roi`:
    Represents a single 2D ROI for selecting data from a specific region of an image.

:class:`CameraCorrection`:
    This class bundles together the imformation needed to correct camera hardware effects such as nonlinearity and dark counts.

:class:`FluorescenceImage`:
    Represents a single fluorescence image acquired by the PWS acquisition software.

:class:`AcqDir`:
    This convenience class represents a single `CellX` folder containing colocalized acquisitions. This makes it simple to keep track of which acquisitions belong together.
"""
import os
_jsonSchemasPath = os.path.join(os.path.split(__file__)[0], 'jsonSchemas')
from ._metadata import ICMetaData, DynMetaData, ERMetadata, MetaDataBase, FluorMetaData, AnalysisManagerMetaDataBase
from ._otherClasses import Roi, CameraCorrection
from ._FluoresenceImg import FluorescenceImage
from ._arrayClasses import ImCube, DynCube, ExtraReflectionCube, ExtraReflectanceCube, KCube, ICBase, ICRawBase
from ._AcqDir import AcqDir

__all__ = ['ICBase', 'ICRawBase', 'ICMetaData', 'DynMetaData', 'ERMetadata', 'Roi', 'CameraCorrection', 'FluorescenceImage', 'ImCube', "DynCube",
           "ExtraReflectionCube", "ExtraReflectanceCube", 'KCube', 'AcqDir', 'FluorMetaData', "AnalysisManagerMetaDataBase"]






